#include "AmnesiaSignatures.cpp"
#include "AmnesiaExtensions.ihps"

// ============================================================================
// GLOBAL LOADING SCREEN SYSTEM
// ============================================================================
void GetGlobalLoadingScreen(string mapId)
{
    string txtCat = GetGlobalVarString("LS_TextCategory");
    string txtEnt = GetGlobalVarString("LS_" + mapId + "_Entry");
    string imgFil = GetGlobalVarString("LS_" + mapId + "_Image");
    int    imgRnd = GetGlobalVarInt("LS_" + mapId + "_Random");

    SetupLoadScreen(
        txtCat, /* Text Category */
        txtEnt, /* Text Entry */
        imgRnd, /* Random */
        imgFil  /* Image file */
    );
}

// ============================================================================
// STRING HELPERS
// ============================================================================
bool StringIsInArray(string text, string[] array)
{
    for(uint i = 0; i < array.length(); i++)
    {
        if(array[i] == text) return true;
    }
    return false;
}

// ============================================================================
// DOOR MESSAGES
// ============================================================================
void ShowDoorMessage(string entry)
{
    SetMessage("DoorMessages", entry, 0.0f);
}

// ============================================================================
// VOICE OVER AND SLOWING DOWN
// ============================================================================
void PlayVoiceOnPlayerAndSlowdown(
    string soundFile, 
    string subtitleCategory, 
    string subtitleEntry)
{
    SetPlayerRunSpeedMul(0.0f);
    SetPlayerMoveSpeedMul(0.6f);
    SetPlayerJumpDisabled(true);
    PlayVoiceOnPlayer(soundFile, subtitleCategory, subtitleEntry);
    SetEffectVoiceOverCallback("ResetPlayerState");
}

void PlayVoiceOnEntityAndSlowdown(
    string soundFile,
    string subtitleCategory,
    string subtitleEntry,
    string entity)
{
    SetPlayerRunSpeedMul(0.0f);
    SetPlayerMoveSpeedMul(0.6f);
    SetPlayerJumpDisabled(true);
    AddEffectVoice(
        soundFile,        /* Voice File */
        "",               /* Effect File */
        subtitleCategory, /* Text category */
        subtitleEntry,    /* Text entry */
        true,             /* Use position */
        entity,           /* Position entity */
        0.0f,             /* Minimum hearing distance */
        20.0f             /* Maximum hearing distance */
    );
    SetEffectVoiceOverCallback("ResetPlayerState");
}

// ============================================================================
// SKYBOX
// ============================================================================
void SetupSkybox(string texture)
{
    SetSkyBoxActive(true);
    SetSkyBoxTexture(texture);
    SetSkyBoxColor(
        1.0f,     /* Red amount */
        1.0f,     /* Green amount */
        1.0f,     /* Blue amount */
        1.0f  /* Alpha amount */
    );
}

// ============================================================================
// OTHER
// ============================================================================
void FadeInTimer(string t)
{
    FadeIn(2.0f);
}
